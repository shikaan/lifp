name: Build Binaries

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  release:
    types: [ created ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        build:
          - target: bun-darwin-x64
            outfile: lisp-darwin-amd64
          - target: bun-darwin-arm64
            outfile: lisp-darwin-arm64
          - target: bun-linux-x64
            outfile: lisp-linux-amd64
          - target: bun-linux-arm64
            outfile: lisp-linux-arm64
          - target: bun-windows-x64-modern
            outfile: lisp-windows-amd64.exe
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: 1.2.13

      - name: Install dependencies
        run: bun install

      - name: Test
        run: bun test

      - name: Lint
        run: |
          chmod +x ./node_modules/@biomejs/cli-linux-x64/biome
          bun lint

      - name: Compute version string
        id: version
        run: |
          VERSION="${GITHUB_REF#refs/tags/}"
          [[ "$GITHUB_REF" != refs/tags/* ]] && VERSION="dev"
          VERSION_STRING="${VERSION} (${GITHUB_SHA:0:7})"
          echo "VERSION_STRING=$VERSION_STRING" >> $GITHUB_OUTPUT

      - name: Create build directory
        run: mkdir -p build

      - name: Build for ${{ matrix.build.target }}
        run: >
          bun build ./bin/repl.ts \
            --compile \
            --target=${{ matrix.build.target }} \
            --outfile=build/${{ matrix.build.outfile }} \
            --define __VERSION__="${{ steps.version.outputs.VERSION_STRING }}"

      - name: Upload artifact for ${{ matrix.build.target }}
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.build.outfile }}
          path: build/
          retention-days: 7

      - name: Upload release assets
        if: github.event_name == 'release'
        uses: softprops/action-gh-release@v1
        with:
          files: |
            build/lisp-darwin-amd64
            build/lisp-darwin-arm64
            build/lisp-linux-amd64
            build/lisp-linux-arm64
            build/lisp-windows-amd64.exe